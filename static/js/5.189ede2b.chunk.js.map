{"version":3,"sources":["views/RegisterPage.js","components/Title/Title.js","components/Label/Label.js","components/Input/Input.js","components/Form/Form.js","components/Form/Form.module.css"],"names":["RegisterView","state","name","email","password","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onRegister","alert","this","text","onSubmit","autoComplete","type","placeholder","onChange","Component","mapDispatchToProps","authOperations","register","connect","Title","className","Label","htmlFor","children","defaultProps","Input","id","Form","style","module","exports"],"mappings":"kTASMA,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,MAAO,GACPC,SAAU,I,EAGZC,aAAe,YAAkC,IAAD,IAA9BC,OAAUJ,EAAoB,EAApBA,KAAMK,EAAc,EAAdA,MAChC,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAAAC,GACbA,EAAEC,iBADgB,MAEgB,EAAKV,MAA/BC,EAFU,EAEVA,KAAMC,EAFI,EAEJA,MAAOC,EAFH,EAEGA,SAChBF,GAASC,GAAUC,GAIxB,EAAKQ,MAAMC,WAAW,EAAKZ,OAC3B,EAAKO,SAAS,CAAEN,KAAM,GAAIC,MAAO,GAAIC,SAAU,MAJ7CU,MAAM,0B,4CAOV,WAAU,IAAD,EAC2BC,KAAKd,MAA/BC,EADD,EACCA,KAAMC,EADP,EACOA,MAAOC,EADd,EACcA,SACrB,OACE,gCACE,cAAC,IAAD,CAAOY,KAAM,iBACb,eAAC,IAAD,CAAMC,SAAUF,KAAKN,aAAcS,aAAc,MAAjD,UACE,cAAC,IAAD,CAAOhB,KAAM,QAAb,SACE,cAAC,IAAD,CACEiB,KAAM,OACNjB,KAAM,OACNK,MAAOL,EACPkB,YAAa,YACbC,SAAUN,KAAKV,iBAInB,cAAC,IAAD,CAAOH,KAAM,SAAb,SACE,cAAC,IAAD,CACEiB,KAAM,QACNjB,KAAM,QACNK,MAAOJ,EACPiB,YAAa,gBACbC,SAAUN,KAAKV,iBAInB,cAAC,IAAD,CAAOH,KAAM,WAAb,SACE,cAAC,IAAD,CACEiB,KAAM,WACNjB,KAAM,WACNK,MAAOH,EACPgB,YAAa,UACbC,SAAUN,KAAKV,iBAInB,cAAC,IAAD,CAAQc,KAAM,SAAUH,KAAM,qB,GA1DbM,aAiErBC,EAAqB,CACzBV,WAAYW,IAAeC,UAGdC,sBAAQ,KAAMH,EAAdG,CAAkC1B,I,wFClElC2B,EARD,SAAC,GAAc,IAAZX,EAAW,EAAXA,KACf,OAAO,oBAAIY,UAAU,QAAd,SAAuBZ,M,8GCD1Ba,EAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAS5B,EAAZ,EAAYA,KAAM6B,EAAlB,EAAkBA,SAAlB,OACZ,wBAAOD,QAASA,EAAhB,UACG5B,EADH,IACU6B,MAIZF,EAAMG,aAAe,CACnBF,QAAS,KACT5B,KAAM,MASO2B,S,yFCjBTI,EAAQ,SAAC,GAAD,IAAGd,EAAH,EAAGA,KAAMjB,EAAT,EAASA,KAAMK,EAAf,EAAeA,MAAO2B,EAAtB,EAAsBA,GAAId,EAA1B,EAA0BA,YAAaC,EAAvC,EAAuCA,SAAvC,OACZ,uBACEF,KAAMA,EACNjB,KAAMA,EACNK,MAAOA,EACP2B,GAAIA,EACJd,YAAaA,EACbC,SAAUA,KAIdY,EAAMD,aAAe,CACnBE,GAAI,KACJd,YAAa,MAYAa,S,mGCzBTE,EAAO,SAAC,GAAD,IAAGjB,EAAH,EAAGA,aAAca,EAAjB,EAAiBA,SAAUd,EAA3B,EAA2BA,SAA3B,OACX,sBAAMC,aAAcA,EAAcU,UAAWQ,IAAMD,KAAMlB,SAAUA,EAAnE,SACGc,KAILI,EAAKH,aAAe,CAClBd,aAAc,MASDiB,S,mBCnBfE,EAAOC,QAAU,CAAC,KAAO","file":"static/js/5.189ede2b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { authOperations } from '../redux/auth';\nimport Title from '../components/Title';\nimport Form from '../components/Form';\nimport Label from '../components/Label';\nimport Input from '../components/Input';\nimport Button from '../components/Button';\n\nclass RegisterView extends Component {\n  state = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, email, password } = this.state;\n    if (!name || !email || !password) {\n      alert('Some areas are empty!');\n      return;\n    }\n    this.props.onRegister(this.state);\n    this.setState({ name: '', email: '', password: '' });\n  };\n\n  render() {\n    const { name, email, password } = this.state;\n    return (\n      <div>\n        <Title text={'Registration'} />\n        <Form onSubmit={this.handleSubmit} autoComplete={'off'}>\n          <Label name={'Name:'}>\n            <Input\n              type={'text'}\n              name={'name'}\n              value={name}\n              placeholder={'Your Name'}\n              onChange={this.handleChange}\n            />\n          </Label>\n\n          <Label name={'E-mail'}>\n            <Input\n              type={'email'}\n              name={'email'}\n              value={email}\n              placeholder={'your@mail.com'}\n              onChange={this.handleChange}\n            />\n          </Label>\n\n          <Label name={'Password'}>\n            <Input\n              type={'password'}\n              name={'password'}\n              value={password}\n              placeholder={'*******'}\n              onChange={this.handleChange}\n            />\n          </Label>\n\n          <Button type={'submit'} text={'Signup'} />\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onRegister: authOperations.register,\n};\n\nexport default connect(null, mapDispatchToProps)(RegisterView);\n","import React from 'react';\nimport './Title.css';\nimport PropTypes from 'prop-types';\n\nconst Title = ({ text }) => {\n  return <h2 className=\"Title\">{text}</h2>;\n};\n\nTitle.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Title;\n","import React from 'react';\nimport style from './Label.module.css';\nimport PropTypes from 'prop-types';\n\nconst Label = ({ htmlFor, name, children }) => (\n  <label htmlFor={htmlFor}>\n    {name} {children}\n  </label>\n);\n\nLabel.defaultProps = {\n  htmlFor: null,\n  name: null,\n};\n\nLabel.propTypes = {\n  htmlFor: PropTypes.string,\n  name: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Label;\n","import React from 'react';\nimport style from './Input.module.css';\nimport PropTypes from 'prop-types';\n\nconst Input = ({ type, name, value, id, placeholder, onChange }) => (\n  <input\n    type={type}\n    name={name}\n    value={value}\n    id={id}\n    placeholder={placeholder}\n    onChange={onChange}\n  />\n);\n\nInput.defaultProps = {\n  id: null,\n  placeholder: null,\n};\n\nInput.propTypes = {\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  id: PropTypes.string,\n  placeholder: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Input;\n","import React from 'react';\nimport style from './Form.module.css';\nimport PropTypes from 'prop-types';\n\nconst Form = ({ autoComplete, children, onSubmit }) => (\n  <form autoComplete={autoComplete} className={style.Form} onSubmit={onSubmit}>\n    {children}\n  </form>\n);\n\nForm.defaultProps = {\n  autoComplete: null,\n};\n\nForm.propTypes = {\n  autoComplete: PropTypes.string,\n  onSubmit: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Form;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"Form_Form__39O8e\"};"],"sourceRoot":""}